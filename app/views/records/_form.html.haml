= form_for @record, :url => (@form_url) do |f|

  %h2= t("dataset.data")

  %table.plain
    - @dataset_description.all_field_descriptions.each do |field_description|
      %tr
        %td.label= field_description.title
        %td.edit
          .field
            = f.text_field field_description.identifier
            - if qs = @quality_status.find { |qs| qs.column_name == field_description.identifier }
              .suggestion.clearfix
                .fl.value= qs.suggested_value
                .fr
                  = image_tag "icons/cancel.png", :class => "cancel"
              %a{:href => fix_dataset_record_path(@dataset_description, @record, :field => field_description.identifier), :class => "quality_status"}= image_tag "icons/exclamation.png", :class => "quality_status"
    
    - @related_records_and_fields.each do |records, fields, reflection_name|
      %br
      - if records.present?
        %table
          - records.each_with_index do |record, index|
            %tr
              %th 
                %h1{:style => 'margin-bottom: 0;'}= "#{records.first.dataset.description.title} #{index+1}"
            = f.fields_for reflection_name, record do |rf|
              - fields.each do |field|
                %tr
                  %td.label= field.title
                  %td.edit
                    .field= rf.text_field field.identifier
        
  %h2= t("dataset.meta_information")
  
  %table.plain
    %tr
      %td.label= t("metadata.status")
      %td
        = f.select :record_status, options_for_select(add_translations_to_array(DatastoreManager.record_statuses, "record_statuses"), @record.record_status)
      
    %tr
      %td.label= t("metadata.quality_status")
      %td
        = f.select :quality_status, options_from_collection_for_select(QualityStatus.all, :name, :title, @record.quality_status)
  
  %table.plain
    %tr
      %td
      %td= f.submit